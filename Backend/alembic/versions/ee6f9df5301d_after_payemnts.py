"""after payemnts.

Revision ID: ee6f9df5301d
Revises: e5922c8ab9f5
Create Date: 2025-09-27 16:55:36.443150

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ee6f9df5301d'
down_revision: Union[str, Sequence[str], None] = 'e5922c8ab9f5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blacklisted_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.Text(), nullable=False),
    sa.Column('blacklisted_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_index(op.f('ix_blacklisted_tokens_id'), 'blacklisted_tokens', ['id'], unique=False)
    op.create_table('company',
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('company_id')
    )
    op.create_index(op.f('ix_company_company_id'), 'company', ['company_id'], unique=False)
    op.create_table('feedback',
    sa.Column('feedback_id', sa.Integer(), nullable=False),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('feedback_id')
    )
    op.create_index(op.f('ix_feedback_feedback_id'), 'feedback', ['feedback_id'], unique=False)
    op.create_table('interview',
    sa.Column('interview_id', sa.Integer(), nullable=False),
    sa.Column('scheduled_time', sa.DateTime(), nullable=True),
    sa.Column('meet_link', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('interview_id')
    )
    op.create_index(op.f('ix_interview_interview_id'), 'interview', ['interview_id'], unique=False)
    op.create_table('offer_letter',
    sa.Column('offer_id', sa.Integer(), nullable=False),
    sa.Column('version_no', sa.Integer(), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('offer_id')
    )
    op.create_index(op.f('ix_offer_letter_offer_id'), 'offer_letter', ['offer_id'], unique=False)
    op.create_table('resume_parsing',
    sa.Column('parsing_id', sa.Integer(), nullable=False),
    sa.Column('skills_extracted', sa.Text(), nullable=True),
    sa.Column('experience_extracted', sa.Text(), nullable=True),
    sa.Column('education_extracted', sa.Text(), nullable=True),
    sa.Column('ai_score', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('parsing_id')
    )
    op.create_index(op.f('ix_resume_parsing_parsing_id'), 'resume_parsing', ['parsing_id'], unique=False)
    op.create_table('hr_manager',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.company_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_hr_manager_id'), 'hr_manager', ['id'], unique=False)
    op.create_table('auth_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('access_token', sa.Text(), nullable=False),
    sa.Column('refresh_token', sa.Text(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('hr_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.company_id'], ),
    sa.ForeignKeyConstraint(['hr_id'], ['hr_manager.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('access_token'),
    sa.UniqueConstraint('refresh_token')
    )
    op.create_index(op.f('ix_auth_tokens_id'), 'auth_tokens', ['id'], unique=False)
    op.create_table('job',
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('hr_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('requirements', sa.Text(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('salary_range', sa.String(), nullable=True),
    sa.Column('deadline', sa.DateTime(), nullable=True),
    sa.Column('application_fee', sa.Float(), nullable=True),
    sa.Column('slug', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['hr_id'], ['hr_manager.id'], ),
    sa.PrimaryKeyConstraint('job_id'),
    sa.UniqueConstraint('slug')
    )
    op.create_index(op.f('ix_job_job_id'), 'job', ['job_id'], unique=False)
    op.create_table('linkedin_token',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hr_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('urn', sa.String(), nullable=False),
    sa.Column('access_token', sa.String(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('refresh_token', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['hr_id'], ['hr_manager.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_linkedin_token_id'), 'linkedin_token', ['id'], unique=False)
    op.create_index(op.f('ix_linkedin_token_user_id'), 'linkedin_token', ['user_id'], unique=False)
    op.create_table('candidate',
    sa.Column('candidate_id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('skills', sa.Text(), nullable=True),
    sa.Column('experience', sa.Text(), nullable=True),
    sa.Column('education', sa.Text(), nullable=True),
    sa.Column('resume_url', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['job.job_id'], ),
    sa.PrimaryKeyConstraint('candidate_id')
    )
    op.create_index(op.f('ix_candidate_candidate_id'), 'candidate', ['candidate_id'], unique=False)
    op.create_table('questions_form',
    sa.Column('form_id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['job.job_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('form_id')
    )
    op.create_index(op.f('ix_questions_form_form_id'), 'questions_form', ['form_id'], unique=False)
    op.create_table('notification',
    sa.Column('notification_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('candidate_id', sa.Integer(), nullable=True),
    sa.Column('hr_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidate.candidate_id'], ),
    sa.ForeignKeyConstraint(['hr_id'], ['hr_manager.id'], ),
    sa.PrimaryKeyConstraint('notification_id')
    )
    op.create_index(op.f('ix_notification_notification_id'), 'notification', ['notification_id'], unique=False)
    op.create_table('payment',
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('stripe_payment_intent_id', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('payment_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidate.candidate_id'], ),
    sa.ForeignKeyConstraint(['job_id'], ['job.job_id'], ),
    sa.PrimaryKeyConstraint('payment_id'),
    sa.UniqueConstraint('stripe_payment_intent_id')
    )
    op.create_index(op.f('ix_payment_payment_id'), 'payment', ['payment_id'], unique=False)
    op.create_table('question',
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('form_id', sa.Integer(), nullable=False),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['form_id'], ['questions_form.form_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('question_id')
    )
    op.create_index(op.f('ix_question_question_id'), 'question', ['question_id'], unique=False)
    op.create_table('answer',
    sa.Column('answer_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=False),
    sa.Column('answer_text', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidate.candidate_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['question_id'], ['question.question_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('answer_id')
    )
    op.create_index(op.f('ix_answer_answer_id'), 'answer', ['answer_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_answer_answer_id'), table_name='answer')
    op.drop_table('answer')
    op.drop_index(op.f('ix_question_question_id'), table_name='question')
    op.drop_table('question')
    op.drop_index(op.f('ix_payment_payment_id'), table_name='payment')
    op.drop_table('payment')
    op.drop_index(op.f('ix_notification_notification_id'), table_name='notification')
    op.drop_table('notification')
    op.drop_index(op.f('ix_questions_form_form_id'), table_name='questions_form')
    op.drop_table('questions_form')
    op.drop_index(op.f('ix_candidate_candidate_id'), table_name='candidate')
    op.drop_table('candidate')
    op.drop_index(op.f('ix_linkedin_token_user_id'), table_name='linkedin_token')
    op.drop_index(op.f('ix_linkedin_token_id'), table_name='linkedin_token')
    op.drop_table('linkedin_token')
    op.drop_index(op.f('ix_job_job_id'), table_name='job')
    op.drop_table('job')
    op.drop_index(op.f('ix_auth_tokens_id'), table_name='auth_tokens')
    op.drop_table('auth_tokens')
    op.drop_index(op.f('ix_hr_manager_id'), table_name='hr_manager')
    op.drop_table('hr_manager')
    op.drop_index(op.f('ix_resume_parsing_parsing_id'), table_name='resume_parsing')
    op.drop_table('resume_parsing')
    op.drop_index(op.f('ix_offer_letter_offer_id'), table_name='offer_letter')
    op.drop_table('offer_letter')
    op.drop_index(op.f('ix_interview_interview_id'), table_name='interview')
    op.drop_table('interview')
    op.drop_index(op.f('ix_feedback_feedback_id'), table_name='feedback')
    op.drop_table('feedback')
    op.drop_index(op.f('ix_company_company_id'), table_name='company')
    op.drop_table('company')
    op.drop_index(op.f('ix_blacklisted_tokens_id'), table_name='blacklisted_tokens')
    op.drop_table('blacklisted_tokens')
    # ### end Alembic commands ###
